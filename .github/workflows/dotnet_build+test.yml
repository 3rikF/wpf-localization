name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  #----------------------------------------------------------------------------------------------------------------------------------------
  build:

    strategy:
      matrix:
        CONFIGURATION: [Debug, Release]

    # For a list of available runner types, refer to
    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: windows-latest

    env:
      # Replace with your solution name, i.e. MyWpfApp.sln.
      SOLUTION_NAME: "./WpfLocalizationTest.slnx"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test $env:SOLUTION_NAME --collect:"XPlat Code Coverage;Format=json,cobertura"

    # taken from a Codecov example
    - name: Upload coverage reports to Codecov
      #uses: codecov/codecov-action@v4
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./TestResults/**/*.cobertura.xml
        flags: unittests
    #   name: codecov-umbrella

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:SOLUTION_NAME /t:Restore /p:Configuration=$env:ConfigurationMicrosoft.QuickAction.NearShare
      env:
        Configuration: ${{ matrix.CONFIGURATION }}